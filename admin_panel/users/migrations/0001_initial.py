# Generated by Django 5.1.6 on 2025-02-19 23:36

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('phone_number', models.CharField(max_length=20, verbose_name='연락처')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='최근 로그인 IP')),
                ('login_count', models.PositiveIntegerField(default=0, verbose_name='로그인 횟수')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '관리자',
                'verbose_name_plural': '관리자',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='아이디')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('company_name', models.CharField(max_length=255, verbose_name='업체명')),
                ('business_registration_number', models.CharField(max_length=20, unique=True, verbose_name='사업자등록번호')),
                ('business_phone_number', models.CharField(max_length=20, verbose_name='대표번호')),
                ('consultation_phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='상담번호')),
                ('address', models.CharField(max_length=255, verbose_name='주소')),
                ('address_detail', models.CharField(blank=True, max_length=255, null=True, verbose_name='상세주소')),
                ('user_type', models.CharField(choices=[('provider', '대행사'), ('demand', '수요업체')], max_length=10, verbose_name='업체유형')),
                ('status', models.CharField(choices=[('pending', '승인대기'), ('approved', '승인완료'), ('rejected', '승인거부')], default='pending', max_length=10, verbose_name='승인상태')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='승인처리일')),
                ('rejection_reason', models.TextField(blank=True, null=True, verbose_name='거부사유')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='등록일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='승인처리자')),
            ],
            options={
                'verbose_name': '회원업체',
                'verbose_name_plural': '회원업체 목록',
            },
        ),
        migrations.CreateModel(
            name='CompanyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('business', '사업자등록증'), ('account', '통장사본'), ('other', '기타')], max_length=20, verbose_name='서류종류')),
                ('file', models.FileField(upload_to='company_docs/%Y/%m/', verbose_name='파일')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='업로드일시')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company', verbose_name='업체')),
            ],
            options={
                'verbose_name': '업체서류',
                'verbose_name_plural': '업체서류 목록',
            },
        ),
    ]
