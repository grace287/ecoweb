# Generated by Django 5.1.6 on 2025-02-21 07:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate_number', models.CharField(max_length=20, unique=True, verbose_name='견적번호')),
                ('demand_id', models.IntegerField(verbose_name='의뢰인 ID')),
                ('provider_id', models.IntegerField(verbose_name='제공자 ID')),
                ('address', models.CharField(max_length=255, verbose_name='측정 주소')),
                ('contact_person', models.CharField(max_length=100, verbose_name='담당자명')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='연락처')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='이메일')),
                ('business_registration_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='사업자등록번호')),
                ('base_amount', models.DecimalField(decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='기본 금액')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='할인 금액')),
                ('vat_amount', models.DecimalField(decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='부가세')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='최종 금액')),
                ('status', models.CharField(choices=[('REQUEST', '견적요청'), ('WORKING', '작성중'), ('RESPONSE', '견적응답'), ('APPROVED', '수락'), ('REJECTED', '거절'), ('PAID', '결제완료'), ('CANCELLED', '취소')], default='REQUEST', max_length=10, verbose_name='상태')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='유효기간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '견적서',
                'verbose_name_plural': '견적서 목록',
                'db_table': 'estimates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MeasurementLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='측정 장소')),
            ],
        ),
        migrations.CreateModel(
            name='PreferredSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('asap', '최대한 빨리'), ('within_3_days', '3일 이내'), ('within_1_week', '1주일 이내'), ('within_1_month', '한 달 이내')], max_length=50, unique=True, verbose_name='측정 희망 일정')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.CharField(choices=[('indoor-air', '실내공기질'), ('noise-vibration', '소음·진동'), ('odor', '악취'), ('water', '수질'), ('air', '대기'), ('major-disaster', '중대재해'), ('office', '사무실'), ('esg', 'ESG경영'), ('etc', '기타')], max_length=20, unique=True, verbose_name='카테고리 코드')),
                ('name', models.CharField(max_length=255, verbose_name='분야')),
            ],
            options={
                'verbose_name': '서비스 카테고리',
                'verbose_name_plural': '서비스 카테고리',
            },
        ),
        migrations.CreateModel(
            name='MeasurementItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255, verbose_name='측정 종류')),
                ('unit_price', models.PositiveIntegerField(verbose_name='단가')),
                ('maintain_quantity', models.PositiveIntegerField(verbose_name='유지 개수')),
                ('recommend_quantity', models.PositiveIntegerField(verbose_name='권고 개수')),
                ('subtotal', models.PositiveIntegerField(verbose_name='합계')),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurement_items', to='estimates.estimate', verbose_name='견적')),
            ],
            options={
                'verbose_name': '측정 항목',
                'verbose_name_plural': '측정 항목 목록',
            },
        ),
        migrations.AddField(
            model_name='estimate',
            name='measurement_locations',
            field=models.ManyToManyField(related_name='estimates', to='estimates.measurementlocation', verbose_name='측정 장소'),
        ),
        migrations.AddField(
            model_name='estimate',
            name='preferred_schedule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='estimates.preferredschedule', verbose_name='희망 일정'),
        ),
        migrations.AddField(
            model_name='estimate',
            name='service_types',
            field=models.ManyToManyField(related_name='estimates', to='estimates.servicecategory', verbose_name='측정 종류'),
        ),
    ]
