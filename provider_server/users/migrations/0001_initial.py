# Generated by Django 5.1.6 on 2025-02-28 02:32

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.CharField(max_length=20, unique=True, verbose_name='카테고리 코드')),
                ('name', models.CharField(max_length=255, verbose_name='분야')),
            ],
            options={
                'verbose_name': '서비스 카테고리',
                'verbose_name_plural': '서비스 카테고리 목록',
            },
        ),
        migrations.CreateModel(
            name='ProviderUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company_name', models.CharField(max_length=255, verbose_name='업체명')),
                ('business_registration_number', models.CharField(max_length=20, unique=True, verbose_name='사업자등록번호')),
                ('business_phone_number', models.CharField(max_length=20, verbose_name='대표번호')),
                ('consultation_phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='상담번호')),
                ('address', models.CharField(max_length=255, verbose_name='주소')),
                ('address_detail', models.CharField(blank=True, max_length=255, null=True, verbose_name='상세 주소')),
                ('is_approved', models.BooleanField(default=False, verbose_name='승인 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('groups', models.ManyToManyField(blank=True, related_name='demanduser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='demanduser_permissions', to='auth.permission')),
                ('service_category', models.ManyToManyField(related_name='providers', to='users.servicecategory', verbose_name='서비스 분야')),
            ],
            options={
                'verbose_name': '대행사 사용자',
                'verbose_name_plural': '대행사 사용자 목록',
                'db_table': 'provider_users',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('business', '사업자등록증'), ('other', '기타')], max_length=20, verbose_name='파일 유형')),
                ('file', models.FileField(upload_to='attachments/', verbose_name='첨부파일')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='업로드일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '첨부파일',
                'verbose_name_plural': '첨부파일 목록',
            },
        ),
    ]
